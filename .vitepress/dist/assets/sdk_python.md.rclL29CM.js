import{_ as a,c as s,o as i,V as e}from"./chunks/framework.tX0lWPPN.js";const u=JSON.parse('{"title":"Unreal Speech Python SDK","description":"","frontmatter":{},"headers":[],"relativePath":"sdk/python.md","filePath":"sdk/python.md"}'),t={name:"sdk/python.md"},n=e(`<h1 id="unreal-speech-python-sdk" tabindex="-1">Unreal Speech Python SDK <a class="header-anchor" href="#unreal-speech-python-sdk" aria-label="Permalink to &quot;Unreal Speech Python SDK&quot;">​</a></h1><p>Unreal Speech Python SDK allows you to easily integrate the Unreal Speech API into your Python applications for text-to-speech (TTS) synthesis. This SDK provides convenient methods for working with the Unreal Speech API, including generating speech, managing synthesis tasks, and streaming audio.</p><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ul><li><a href="#getting-started">Getting Started</a><ul><li><a href="#installation">Installation</a></li><li><a href="#obtaining-an-api-key">Obtaining an API Key</a></li></ul></li><li><a href="#usage">Usage</a><ul><li><a href="#initializing-the-unrealspeechapi">Initializing the UnrealSpeechAPI</a></li><li><a href="#generating-speech">Generating Speech</a></li><li><a href="#managing-synthesis-tasks">Managing Synthesis Tasks</a></li></ul></li><li><a href="#examples">Examples</a></li><li><a href="#documentation">Documentation</a></li><li><a href="#contributing">Contributing</a></li><li><a href="#license">License</a></li></ul><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><h3 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h3><p>You can install the Unreal Speech API Python package using pip:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install unrealspeech</span></span></code></pre></div><p>To ensure the package functions correctly, it is necessary to install the following dependencies as well.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install playsound pydub simpleaudio</span></span></code></pre></div><h2 id="available-endpoints" tabindex="-1">Available endpoints <a class="header-anchor" href="#available-endpoints" aria-label="Permalink to &quot;Available endpoints&quot;">​</a></h2><table><thead><tr><th>Endpoint</th><th>Description</th></tr></thead><tbody><tr><td><code>/stream</code></td><td>Stream audio for short, time-sensitive cases</td></tr><tr><td><code>/speech</code></td><td>Generate speech with options (MP3 format)</td></tr><tr><td><code>/synthesisTasks</code></td><td>Manage synthesis tasks for longer text</td></tr><tr><td><code>/synthesisTasks/TaskId</code></td><td>Check the status of a synthesis task</td></tr></tbody></table><h2 id="common-request-body-schema" tabindex="-1">Common Request Body Schema <a class="header-anchor" href="#common-request-body-schema" aria-label="Permalink to &quot;Common Request Body Schema&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Type</th><th>Required?</th><th>Default Value</th><th>Allowed Values</th></tr></thead><tbody><tr><td>VoiceId</td><td>string</td><td>Required</td><td>N/A</td><td>Scarlett, Liv, Dan, Will, Amy</td></tr><tr><td>Bitrate</td><td>string</td><td>Optional</td><td>192k</td><td>16k, 32k, 48k, 64k, 128k, 192k, 256k, 320k</td></tr><tr><td>Speed</td><td>float</td><td>Optional</td><td>0</td><td>-1.0 to 1.0</td></tr><tr><td>Pitch</td><td>float</td><td>Optional</td><td>1.0</td><td>0.5 to 1.5</td></tr></tbody></table><h2 id="parameter-details" tabindex="-1">Parameter Details <a class="header-anchor" href="#parameter-details" aria-label="Permalink to &quot;Parameter Details&quot;">​</a></h2><ul><li><p><strong>VoiceId:</strong></p><ul><li>Dan: Young Male</li><li>Will: Mature Male</li><li>Scarlett: Young Female</li><li>Liv: Young Female</li><li>Amy: Mature Female</li></ul></li><li><p><strong>Bitrate:</strong> Defaults to 192k. Use lower values for low bandwidth or to reduce the transferred file size. Use higher values for higher fidelity.</p></li><li><p><strong>Speed:</strong> Defaults to 0. Examples:</p><ul><li>0.5: makes the audio 50% faster. (i.e., 60-second audio becomes 42 seconds)</li><li>-0.5: makes the audio 50% slower. (i.e., 60-second audio becomes 90 seconds.)</li></ul></li><li><p><strong>Pitch:</strong> Defaults to 1. However, on the landing page, we default male voices to 0.92 as people tend to prefer lower/deeper male voices.</p></li></ul><h2 id="rate-limit" tabindex="-1">Rate Limit <a class="header-anchor" href="#rate-limit" aria-label="Permalink to &quot;Rate Limit&quot;">​</a></h2><table><thead><tr><th>Plan</th><th>Requests per second</th></tr></thead><tbody><tr><td>Free</td><td>1</td></tr><tr><td>Basic</td><td>2</td></tr><tr><td>Pro</td><td>8</td></tr></tbody></table><h2 id="obtaining-an-api-key" tabindex="-1">Obtaining an API Key <a class="header-anchor" href="#obtaining-an-api-key" aria-label="Permalink to &quot;Obtaining an API Key&quot;">​</a></h2><p><a href="https://unrealspeech.com/dashboard" target="_blank" rel="noreferrer">Get your API Key</a> To use the Unreal Speech API, you&#39;ll need to obtain an API key by signing up for an account on the Unreal Speech website. Once you have an API key, you can use it to initialize the UnrealSpeechAPI class.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h4 id="initializing-the-unrealspeechapi" tabindex="-1">Initializing the UnrealSpeechAPI <a class="header-anchor" href="#initializing-the-unrealspeechapi" aria-label="Permalink to &quot;Initializing the UnrealSpeechAPI&quot;">​</a></h4><p>First, import the UnrealSpeechAPI class:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> unrealspeech </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UnrealSpeechAPI, play, save</span></span></code></pre></div><p>Then, initialize the API with your API key:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api_key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;YOUR_API_KEY&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">speech_api </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UnrealSpeechAPI(api_key)</span></span></code></pre></div><h2 id="generating-speech" tabindex="-1">Generating Speech <a class="header-anchor" href="#generating-speech" aria-label="Permalink to &quot;Generating Speech&quot;">​</a></h2><p>You can generate speech by providing a text string and optional parameters:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text_to_speech </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;This is a sample text.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">timestamp_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sentence&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Choose from &#39;sentence&#39; or &#39;word&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">voice_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Scarlett&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Choose the desired voice</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">audio_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> speech_api.speech(text_to_speech, timestamp_type, voice_id)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Play audio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">play(audio_data)</span></span></code></pre></div><h2 id="streaming-audio" tabindex="-1">Streaming Audio <a class="header-anchor" href="#streaming-audio" aria-label="Permalink to &quot;Streaming Audio&quot;">​</a></h2><p>For short and time-sensitive cases, you can use the /stream endpoint to stream audio:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Stream audio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text_to_stream </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;This is a short text to be synthesized.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">voice_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Will&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate audio from text</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">audio_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> speech_api.stream(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;Example of using stream&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, voice_id, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">bitrate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192k&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Play audio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">play(audio_data)</span></span></code></pre></div><h2 id="managing-synthesis-tasks" tabindex="-1">Managing Synthesis Tasks <a class="header-anchor" href="#managing-synthesis-tasks" aria-label="Permalink to &quot;Managing Synthesis Tasks&quot;">​</a></h2><p>You can manage synthesis tasks for longer text using the <code>/synthesisTasks</code> endpoint:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create a synthesis task</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">task_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> speech_api.create_synthesis_task(text_to_speech, voice_id, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">bitrate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;320k&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">timestamp_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;word&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check the task status</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">audio_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> speech_api.get_synthesis_task_status(task_id)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Play audio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">play(audio_data)</span></span></code></pre></div><h2 id="downloading-audio" tabindex="-1">Downloading Audio <a class="header-anchor" href="#downloading-audio" aria-label="Permalink to &quot;Downloading Audio&quot;">​</a></h2><p>You can download audio by simply calling the save function</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> unrealspeech </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> save</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  audio_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sppech_api.speech(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;How to download your audio easily&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # you can use the save function to save the audio</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  save(audio_data, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;output.mp3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h2><p>Contributions are welcome! If you find any issues or have suggestions for improvements, please open an issue or submit a pull request.</p><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p>This project is licensed under the MIT License - see the LICENSE file for details</p>`,42),l=[n];function h(p,o,d,r,k,c){return i(),s("div",null,l)}const y=a(t,[["render",h]]);export{u as __pageData,y as default};
